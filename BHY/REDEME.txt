//
/BHY/LoginServlet:
    用户登陆的url
    参数：username（用户名）、password（密码）
    返回值：json格式：   key：   rtn
                        value： 1为登陆成功（会设置user到session中）应跳转到主页面
                                2为密码不正确，不跳转
                                3为用户名不存在，不跳转

//
/BHY/RegisterServlet:
    员工用户注册的url
    参数:   username 用户名
            password 密码
            e_name 员工姓名
            s_id 宠物店id（单选得到）
            d_id 职务id（单选得到）
    返回值：json格式：     key：    rtn
                          value：  1为注册成功，应跳转至登陆页面
                                   0为注册失败（用户名重复）


/BHY/FindUserLimitServlet:
    分页查询用户,会根据session中的user对象的类型判断是否能进行查询(通过判断user对象的d_id属性来得到当前用户的类型)
    参数：页码-
    返回值：json类型，如果当前状态为未登录，put("ifLogin", "false")并进行页面跳转
                      如果已登陆，但权限不是店长，put("ifLogin", "true")，put("isLord", "false")由前端进行提示
                      如果是店长登陆put("ifLogin", "true")，put("isLord", "true")，jsonObject.put("users", users)
                                      最后的users是jsonArray格式的List<User>

//
/BHY/AddClientServlet:
    增加顾客信息的servlet
    参数：姓名 cl_name，手机 mobile, 用户id u_id全部设置为3[，年龄 cl_age，性别 cl_sex，邮箱cl_emil]
    返回值：若添加成功，返回{rtn:"1"}
          ：若添加失败，返回{rtn:"0"}（手机号重复）

//
/BHY/UpdateUserServlet:
    响应前端发送的更新用户信息（大概就是改密码。。。）的请求
    参数：需要传入用户名(username)和新密码(password)
    返回值：    修改成功返回rtn：1
                失败返回rtn：0（用户名不存在吧，一般前端规避这种错误，还有可能是数据库访问错误）

//
/BHY/FindPetLimitServlet：
    响应前台发来的分页查询宠物信息的请求
    参数：查寻的页码
    返回[{"cl_id":0,"cl_name":"小刚","d_id":0,"p_age":0,"p_healthy":"","p_height":0,"p_id":1,"p_sex":"","p_type":"短毛猫","s_id":0,"st_name":""}]
    返回一个json，其中各个字段对应pet的详细信息

//
/BHY/AddPetServlet：
    添加一条宠物信息
    参数： 宠物品种 d_id
           顾客手机号 mobile
           宠物店id s_id
           [年龄 p_age
           性别 p_sex
           体重 p_height]
    返回值：添加成功返回rtn：1
            用户不存在返回rtn：2
            数据库底层错误返回rtn：3

//
/BHY/FindClientLimitServlet:
    分页查询顾客信息，在没有开发顾客板块的情况下，u_id全部为3，前端不需要解析这一属性
    参数：当前的页数
    返回由一条条顾客信息组成的JSONArray

//
/BHY/FindStoreLimitServlet:
    分页查找宠物店信息
    参数：页码page
    返回一个json，stores的值是封装了全部宠物店详细信息的json数组
    [{"d_id":0,"e_id":0,"e_name":"","s_address":"","st_grade":"总店","st_id":1,"st_time":null}]

//
/BHY/FindEmployeeLimitServlet:
    分页查询所有的员工详细信息
    参数：页码
    返回值：[{"d_id":41,"e_age":0,"e_id":3,"e_name":"C","e_salary":5000,"e_sex":"","e_time":null,"e_type":"店长","s_id":1,"st_name":"","u_id":0,"username":""}]

//
/BHY/FindRecordLimitServlet:
    分页查询销售记录的详细信息
    参数：页码page
    返回值：json数组
            [{"c_id":1,"cl_id":1,"cl_name":"小刚","r_id":1,"r_name":"狗粮","r_num":1,"r_pattern":"","r_price":150,
            "r_time":{"date":25,"day":6,"hours":2,"minutes":0,"month":4,"nanos":0,"seconds":0,"time":1558720800000,"timezoneOffset":-480,"year":119},
            "s_id":1,"st_name":""}]

//
/BHY/FindCargoLimitServlet:
    分页查询货物的详细信息
    参数：页码page
    返回值：json数组
         [{"c_expirationDate":null,"c_getDate":null,"c_id":1,"c_name":"狗粮","c_num":200,
         "c_producedDate":null,"c_type":"饲料","d_id":13,"s_id":1,"st_name":""}]

//
/BHY/FindServiceLimitServlet:
    分页查询服务项详细信息
    参数：页码page
    返回值：json数组
         [{"d_id":37,"e_id":0,"e_name":"","p_id":1,"s_aTime":null,"s_id":1,
         "s_isDispose":"true","s_isFinish":"true","s_price":0,"s_type":"看病"}]























        //设置编码
        request.setCharacterEncoding("utf-8");
        response.setContentType("text/html; charset=utf-8");

        //设置输出
        PrintWriter pw = response.getWriter();
        JSONObject jsonObject = new JSONObject();

        //封装数据

        //调用业务逻辑

        //输出





        //得到宠物类型的字典
        JSONObject dics = null;
        DictionaryDao dictionaryDao = new DictionaryDaoImpl();
        try {
            dics = JSONObject.fromObject(
                    DicUtil.dicToMap(
                            dictionaryDao.findAllDictionary()
                    )
            );
        } catch (SQLException e) {
            e.printStackTrace();
        }


    查询：
        输入映射：
            传入表名，字段名，得到map，将表名等其他信息从map中抽取出来
            page使用对象，不使用分页时传入null
        动态SQL：
            遍历字段名map，拼接sql语句
        输出映射：
            无？